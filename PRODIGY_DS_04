# Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
import re

# Load the dataset (update path if needed)
df = pd.read_csv("twitter_training.csv", header=None)
df.columns = ['ID', 'Entity', 'Sentiment', 'Tweet']

# Preview the data
print("First few rows of the dataset:")
print(df.head())

# Clean the tweet text
def clean_text(text):
    text = re.sub(r"http\S+", "", str(text))  # Remove links
    text = re.sub(r"@\w+", "", text)          # Remove mentions
    text = re.sub(r"#", "", text)             # Remove #
    text = re.sub(r"[^A-Za-z\s]", "", text)   # Remove special characters
    return text.lower().strip()

df['Clean_Tweet'] = df['Tweet'].apply(clean_text)

# Sentiment distribution plot
plt.figure(figsize=(6, 4))
sns.countplot(x='Sentiment', data=df, palette='pastel')
plt.title("Sentiment Distribution")
plt.xlabel("Sentiment")
plt.ylabel("Tweet Count")
plt.tight_layout()
plt.show()

# WordCloud for each sentiment
for sentiment in df['Sentiment'].unique():
    text = " ".join(df[df['Sentiment'] == sentiment]['Clean_Tweet'])
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)

    plt.figure(figsize=(10, 5))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title(f"WordCloud for {sentiment} Sentiment")
    plt.tight_layout()
    plt.show()

# Analyze sentiment per entity
entity_sentiment = df.groupby(['Entity', 'Sentiment']).size().unstack().fillna(0)

# Top 10 entities by total tweet volume
top_entities = entity_sentiment.sum(axis=1).sort_values(ascending=False).head(10)

# Bar plot of sentiment per top entities
entity_sentiment.loc[top_entities.index].plot(kind='bar', stacked=True, figsize=(12, 6), colormap='Set2')
plt.title("Sentiment Distribution for Top 10 Entities")
plt.xlabel("Entity")
plt.ylabel("Number of Tweets")
plt.xticks(rotation=45)
plt.legend(title="Sentiment")
plt.tight_layout()
plt.show()
